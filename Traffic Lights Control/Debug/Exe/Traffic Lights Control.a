;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include <alcd.h>
;
;#define no_0 0b10111111 // 0
;#define no_1 0b10000110 // 1
;#define no_2 0b11011011 // 2
;#define no_3 0b11001111 // 3
;#define no_4 0b11100110 // 4
;#define no_5 0b11101101 // 5
;#define no_6 0b11111101 // 6
;#define no_7 0b10000111 // 7
;#define no_8 0b11111111 // 8
;#define no_9 0b11101111 // 9
;
;char numbers[10] = {~no_0, ~no_1, ~no_2, ~no_3, ~no_4, ~no_5, ~no_6, ~no_7, ~no_8, ~no_9};

	.DSEG
;
;#define counter_delay 30
;
;void counter_up(int status) {
; 0000 0014 void counter_up(int status) {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0015     if (status == 0) {
;PCODE: $0000000F VOL: 0
;	status -> Y+0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 0016         PORTB.6 = 0;
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0017         PORTB.7 = 0;
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 0018     } else if (status == 1) {
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 0019         PORTB.6 = 1;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 001A         PORTB.7 = 0;
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 001B     } else if (status == 2) {
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 001C         PORTB.6 = 0;
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 001D         PORTB.7 = 1;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 001E     } else {
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 001F         PORTB.6 = 1;
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 0020         PORTB.7 = 1;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 0021     }
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0022 }
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;
;#define maxTime 60
;
;int l1, l2;
;int l1s, l2s;
;int i, h1h, l1l, h2h, l2l;
;int adc_value;
;
;void light_status(int light, int status) {
; 0000 002B void light_status(int light, int status) {
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 002C     if (light == 0) {
;PCODE: $00000037 VOL: 0
;	light -> Y+2
;	status -> Y+0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 002D         if (status == 0) {
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 002E             PORTB.0 = 1;
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 002F             PORTB.1 = 0;
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 0030             PORTB.2 = 0;
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 0031         } else if (status == 1) {
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 0032             PORTB.0 = 0;
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 0033             PORTB.1 = 1;
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 0034             PORTB.2 = 0;
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 0035         } else {
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 0036             PORTB.0 = 0;
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 0037             PORTB.1 = 0;
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 0038             PORTB.2 = 1;
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 0039         }
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 003A     } else {
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 003B         if (status == 0) {
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 003C             PORTB.3 = 1;
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 003D             PORTB.4 = 0;
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 003E             PORTB.5 = 0;
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 003F         } else if (status == 1) {
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0000 0040             PORTB.3 = 0;
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
; 0000 0041             PORTB.4 = 1;
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0000 0042             PORTB.5 = 0;
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0000 0043         } else {
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 0044             PORTB.3 = 0;
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 0045             PORTB.4 = 0;
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0000 0046             PORTB.5 = 1;
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
; 0000 0047         }
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 0048     }
;PCODE: $00000079 VOL: 0
; 0000 0049 }
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;
;
;
;#define ADC_VREF_TYPE ((0<<REFS1) | (0<<REFS0) | (0<<ADLAR))
;unsigned int read_adc(unsigned char adc_input)
; 0000 004F {
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0000 0050 ADMUX=adc_input | ADC_VREF_TYPE;
;PCODE: $0000007F VOL: 0
;	adc_input -> Y+0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
; 0000 0051 delay_us(10);
;PCODE: $00000083 VOL: 0
; 0000 0052 ADCSRA|=(1<<ADSC);
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0000 0053 while ((ADCSRA & (1<<ADIF))==0);
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
; 0000 0054 ADCSRA|=(1<<ADIF);
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
; 0000 0055 return ADCW;
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0000 0056 }
;PCODE: $00000091 VOL: 0
;
;
;float read_temp;
;
;void main(void)
; 0000 005C {
;PCODE: $00000092 VOL: 0
; 0000 005D 
; 0000 005E DDRA=0b00000000;
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0000 005F PORTA=0b00000001;
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0000 0060 
; 0000 0061 DDRB=0xff;
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
; 0000 0062 PORTB=0x00;
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
; 0000 0063 
; 0000 0064 DDRC=0xff;
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0000 0065 PORTC=0x00;
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
; 0000 0066 
; 0000 0067 DDRD=0xff;
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0000 0068 PORTD=0xff;
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
; 0000 0069 
; 0000 006A ADMUX=ADC_VREF_TYPE;
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
; 0000 006B ADCSRA=(1<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
; 0000 006C SFIOR=(0<<ADTS2) | (0<<ADTS1) | (0<<ADTS0);
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
; 0000 006D 
; 0000 006E lcd_init(20);
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
; 0000 006F lcd_gotoxy(6, 1);
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
; 0000 0070 lcd_puts("WELCOME!");
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
; 0000 0071 lcd_gotoxy(3, 2);
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
; 0000 0072 lcd_puts("Traffic lights");
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
; 0000 0073 delay_ms(200);
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
; 0000 0074 
; 0000 0075 lcd_clear();
;PCODE: $000000BC VOL: 0
; 0000 0076 lcd_gotoxy(3, 0);
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
; 0000 0077 lcd_puts("Traffic lights");
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
; 0000 0078 lcd_gotoxy(5, 1);
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
; 0000 0079 lcd_puts("4022363143");
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
; 0000 007A lcd_gotoxy(5, 2);
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
; 0000 007B lcd_puts("4003623035");
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
; 0000 007C lcd_gotoxy(0, 3);
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
; 0000 007D lcd_puts("l&7S 16p      lcd 6p");
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
; 0000 007E 
; 0000 007F l1s = 2, l2s = 0;
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
; 0000 0080 l1 = maxTime;
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
; 0000 0081 l2 = maxTime * 3 / 4;
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
; 0000 0082 
; 0000 0083 while (1)
;PCODE: $000000E1 VOL: 0
; 0000 0084       {
; 0000 0085       l1 --;
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
; 0000 0086       l2 --;
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
; 0000 0087       if (l1 == 0) {
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
; 0000 0088         if (l1s == 0) {
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
; 0000 0089             l1 = adc_value;
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
; 0000 008A             l1s = 2;
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
; 0000 008B         } else {
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
; 0000 008C             l1 = adc_value * 3 / 4;
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
; 0000 008D             l1s = 0;
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
; 0000 008E         }
;PCODE: $000000FF VOL: 0
; 0000 008F       }
; 0000 0090 
; 0000 0091       if (l1 <= 2 && l1s == 2) {
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
; 0000 0092         l1s = 1;
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
; 0000 0093       }
; 0000 0094 
; 0000 0095 
; 0000 0096       if (l2 == 0) {
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
; 0000 0097         if (l2s == 0) {
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
; 0000 0098             l2 = adc_value;
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
; 0000 0099             l2s = 2;
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
; 0000 009A         } else {
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
; 0000 009B             l2 = adc_value * 3 / 4;
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
; 0000 009C             l2s = 0;
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
; 0000 009D         }
;PCODE: $00000123 VOL: 0
; 0000 009E       }
; 0000 009F 
; 0000 00A0       if (l2 <= 2 && l2s == 2) {
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
; 0000 00A1         l2s = 1;
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
; 0000 00A2       }
; 0000 00A3 
; 0000 00A4 
; 0000 00A5       light_status(0, l1s);
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
; 0000 00A6       light_status(1, l2s);
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
; 0000 00A7 
; 0000 00A8 
; 0000 00A9       h1h = l1 / 10;
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
; 0000 00AA       l1l = l1 % 10;
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
; 0000 00AB       h2h = l2 / 10;
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
; 0000 00AC       l2l = l2 % 10;
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
; 0000 00AD 
; 0000 00AE       for(i = 0; i < 1; i ++){
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
; 0000 00AF         PORTD = numbers[h1h];
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
; 0000 00B0         counter_up(3);
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
; 0000 00B1         delay_ms(counter_delay);
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
; 0000 00B2 
; 0000 00B3         PORTD = numbers[l1l];
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
; 0000 00B4         counter_up(2);
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
; 0000 00B5         delay_ms(counter_delay);
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
; 0000 00B6 
; 0000 00B7         PORTD = numbers[h2h];
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
; 0000 00B8         counter_up(1);
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
; 0000 00B9         delay_ms(counter_delay);
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
; 0000 00BA 
; 0000 00BB         PORTD = numbers[l2l];
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
; 0000 00BC         counter_up(0);
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
; 0000 00BD         delay_ms(counter_delay);
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
; 0000 00BE       }
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
; 0000 00BF       adc_value = read_adc(0) * maxTime / 1023;
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
; 0000 00C0     }
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
; 0000 00C1 }
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0

	.DSEG
_0x4B:
	.BYTE 0x52
